#include<stdio.h>
#include<math.h>
#include<ctype.h>
void encrypt(char*,int);
void decrypt(char*,int);	
main()
{
    int n,c;
    char a[50],ch;
	do
	{
	    printf("\n");
		printf("Enter the string\n");
		scanf("%s",a);
		n=strlen(a);  //length of the string
		printf("Enter 1 to encrypt or 0 to decrypt\n");
		scanf("%d",&c);
		if(c)
		{ encrypt(a,n);}
		else{ decrypt(a,n);}
		printf("\ncontinue?? enter y/n:");
		ch=getch();
	}while(ch=='y');
}
void encrypt(char *a,int n)
{  
    int p,flag=0,t,i,j,k,e,s;
    char b[50][50];
    for(p=0;p<=n/2;p++) //check if perfect square number
    {
        if((p*p)==n)
        {
             flag=1;
		     t=p;
	         break;
        }else if((p*p)<n)//nearest perfect square number
	    {    
		     t=p;
	    }
    }	
    if(flag)//if given string's length is perfect square
    {
         for(j=0;j<t;j++)
	    {
		     for(i=0;i<n;i=i+t)
		    {
			     printf("%c",a[i+j]);//encrypted text
			}
        }		
    }
    // if given string's length is not a perfect square
	else
    {
	    s=1;
		e=n-(t*t);
		for(p=1;p<=e;p++)//s is number of extra rows to appended at the bottom
		{
		    if((!(p%t))&&(p<e))
			{
				s++;
			}
		}	
		s=s+t;
	    k=0;
	    for(i=0;i<s;i++)//put the string into 2 dimensional array
	    {
	         for(j=0;j<t;j++)
	        {
	             if(isalpha(a[k]))
	             {  
				     b[i][j]=a[k];
				 }
		         else
		         {  
				     b[i][j]='*';
				 }
		         k++;
	        }
        }
        for(i=0;i<t;i++)
        {
	         for(j=0;j<s;j++)
	        {
	             printf("%c",b[j][i]);//encrypted string
	        }
        }
    }
}
void decrypt(char *a,int n)
{  
    int p,flag=0,t,i,j,k,e,s;
    char b[50][50];
    for(p=0;p<=n/2;p++) //check if perfect square number
    {
        if((p*p)==n)
        {
             flag=1;
		     t=p;
	         break;
        }else if((p*p)<n)//nearest perfect square number
	    {    
		     t=p;
	    }
    }	
    if(flag)//if given string's length is perfect square
    {
         for(j=0;j<t;j++)
	    {
		     for(i=0;i<n;i=i+t)
		    {
			     printf("%c",a[i+j]);//decrypted text
			}
        }		
    }
     // if given string's length is not a perfect square
	else
    {
        s=1;
		e=n-(t*t);
		for(p=1;p<=e;p++)//s is number of extra rows to appended at the bottom
		{
		    if((!(p%t))&&(p<e))
			{
				s++;
			}
		}	
		s=s+t;
	     k=0;
	     for(i=0;i<t;i++)//put the string into 2 dimensional array
	    {
	         for(j=0;j<s;j++)
	        {
	             if(isalpha(a[k]))
	             {  
				     b[i][j]=a[k];
				 }
		         else
		         {  
				     b[i][j]='*';
				 }
		         k++;
	        }
        }
        for(i=0;i<s;i++)
        {
	         for(j=0;j<t;j++)
	        {
			    if(isalpha(b[j][i]))
				{
					printf("%c",b[j][i]);//decrypted string
				}
	        }
        }
    }
}  
  
